// Generated by CoffeeScript 1.7.1
(function() {
  var agent, fs, http, reloadAgent, server, spdy, url;

  fs = require('fs');

  spdy = require('spdy');

  http = require('http');

  url = require('url');

  agent = null;

  reloadAgent = function() {
    agent = spdy.createAgent({
      host: '127.0.0.1',
      port: 1443,
      rejectUnauthorized: false,
      requestCert: true,
      spdy: {
        plain: false,
        ssl: true,
        version: 3
      }
    });
    return agent.on('error', function(e) {
      return console.error(e);
    });
  };

  reloadAgent();

  server = http.createServer(function(req, res) {
    var remoteReq, srvUrl;
    srvUrl = url.parse(req.url);
    console.log(srvUrl);
    remoteReq = http.get({
      agent: agent,
      method: req.method,
      hostname: srvUrl.hostname,
      port: srvUrl.port || 80,
      path: srvUrl.href,
      headers: req.headers,
      trailers: req.trailers,
      httpVersion: req.httpVersion
    }, function(remoteRes) {
      console.log('remote res');
      res.writeHead(remoteRes.statusCode);
      res.on('data', function(chunk) {
        console.log('res on data');
        return remoteRes.write(chunk);
      });
      remoteRes.on('data', function(chunk) {
        console.log('remote res on data');
        return res.write(chunk);
      });
      res.on('end', function() {
        console.log('res on end');
        return remoteRes.end();
      });
      return remoteRes.on('end', function() {
        console.log('remote res on end');
        return res.end();
      });
    });
    return console.log('req');
  });

  server.on('connect', function(req, socket) {
    var srvUrl;
    console.log('connect');
    return srvUrl = url.parse('http://' + req.url);
  });

  server.listen(8080);

}).call(this);
